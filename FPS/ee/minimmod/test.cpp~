#include <irrlicht.h>
#include "driverChoice.h"

using namespace irr;

#ifdef _MSC_VER
#pragma comment(lib, "Irrlicht.lib")
#endif

int main()
{
    // demande un pilote a l'utilisateur
    video::E_DRIVER_TYPE driverType=driverChoiceConsole();
    if (driverType==video::EDT_COUNT)
        return 1;

    // crée le moteur

    IrrlichtDevice *device = createDevice(driverType,
        core::dimension2d<u32>(512, 384));

    if (device == 0)
        return 1; // on ne peut pas créer le pilote sélectionné.

    device->setWindowCaption(L"Irrlicht Engine - 2D Graphics Demo");

    video::IVideoDriver* driver = device->getVideoDriver();

    video::ITexture* images = driver->getTexture("media/blackos.png");
    driver->makeColorKeyTexture(images, core::position2d<s32>(0,0));

    

    core::rect<s32> imp1(349,15,385,78);
    core::rect<s32> imp2(387,15,423,78);

    driver->getMaterial2D().TextureLayer[0].BilinearFilter=true;
    driver->getMaterial2D().AntiAliasing=video::EAAM_FULL_BASIC;

    //int vie =100;

    while(device->run() && driver)
     {
      if (device->isWindowActive())
      {
          u32 time = device->getTimer()->getTime();

        driver->beginScene(true, true, video::SColor(255,120,102,136));

	IGUIStaticText* fpstext = env->addStaticText(L"",
			core::rect<s32>(400,4,570,23), true, false, bar);    
	    

	    //dessine du texte
	//if (font)
	//font->draw(L"VIE=",
	//    core::rect<s32>(130,10,300,50),
	//   video::SColor(255,255,255,255));


	   
	    

    //dessine un autre texte
	// if (font)
	//    font2->draw(L"Also mixing with 3d graphics is possible.",
	//        core::rect<s32>(130,20,300,60),
	//        video::SColor(255,time % 255,time % 255,255));
	
	    core::position2d<s32> m = device->getCursorControl()->getPosition();
            driver->draw2DRectangle(video::SColor(100,255,255,255),
                core::rect<s32>(m.X-20, m.Y-20, m.X+20, m.Y+20));

         driver->endScene();
       }
     }

   device->drop();

return 0;
}
}



